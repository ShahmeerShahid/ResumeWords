{"version":3,"sources":["components/HeaderAndFooter/index.js","components/ExampleLinks/index.js","components/UserInput/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","h1","fontSize","base","sm","lg","letterSpacing","fontWeight","mb","lineHeight","as","color","useColorModeValue","opacity","mt","Footer","links","label","icon","VscGithubInverted","url","height","textAlign","className","aria-label","role","href","isExternal","direction","spacing","justify","map","link","index","key","display","exampleButtons","name","styles","buttonGrid","maxWidth","margin","buttonContainer","ExampleLinks","setFieldValue","style","columns","button","colorScheme","minWidth","disabled","onClick","window","open","UserInput","num_words","errors","handleSubmit","validateURL","paddingTop","size","pr","placeholder","value","onChange","e","target","paddingLeft","width","children","isValid","length","Check","Close","renderURLValidationIcon","min","max","ERR_MSGS","Schema","Yup","shape","required","EnhancedApp","withFormik","enableReinitialize","console","log","mapPropsToValues","props","validationSchema","validateOnBlur","validateOnChange","enqueueSnackBar","values","justifyContent","pt","md","pb","flexDirection","id","validateSyncAt","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0afa999e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Icon,\r\n  Link,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  chakra,\r\n} from \"@chakra-ui/react\";\r\nimport { VscGithubInverted } from \"react-icons/vsc\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <>\r\n      <chakra.h1\r\n        fontSize={{ base: \"2.25rem\", sm: \"3rem\", lg: \"3.75rem\" }}\r\n        letterSpacing=\"tight\"\r\n        fontWeight=\"bold\"\r\n        mb=\"16px\"\r\n        lineHeight=\"1.2\"\r\n      >\r\n        Resume\r\n        <Box as=\"span\" color={useColorModeValue(\"teal.500\", \"teal.300\")}>\r\n          Words\r\n        </Box>\r\n      </chakra.h1>\r\n      <br />\r\n      <Text opacity={0.7} fontSize={{ base: \"lg\", lg: \"xl\" }} mt=\"6\">\r\n        Paste URL below, click \"Submit\" and wait for your results. Make sure to\r\n        include those words in your resume or cover letter!\r\n      </Text>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Footer() {\r\n  const links = [\r\n    {\r\n      label: \"Github\",\r\n      icon: VscGithubInverted,\r\n      url: \"https://github.com/ShahmeerShahid/ResumeWords/\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n\t\t<>\r\n\t\t\t<Box\r\n\t\t\t\tas=\"footer\"\r\n\t\t\t\tmt={12}\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\tclassName=\"app\"\r\n\t\t\t>\r\n\t\t\t\t<Text fontSize=\"sm\">\r\n\t\t\t\t\tMade with{\" \"}\r\n\t\t\t\t\t<span aria-label=\"heart\" role=\"img\">\r\n\t\t\t\t\t\t&#128153;\r\n\t\t\t\t\t</span>{\" \"}\r\n\t\t\t\t\tby{\" \"}\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref=\"https://ca.linkedin.com/in/shahmeer-shahid\"\r\n\t\t\t\t\t\tisExternal\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tShahmeer Shahid\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t,{\" \"}\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\thref=\"https://www.linkedin.com/in/lazar-lolic-207779184/\"\r\n\t\t\t\t\t\tisExternal\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLazar Lolic\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t, &{\" \"}\r\n\t\t\t\t\t<Link href=\"http://jarrodservilla.com\" isExternal>\r\n\t\t\t\t\t\tJarrod Servilla\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tmt={4}\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tspacing=\"12px\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tmb={10}\r\n\t\t\t\t>\r\n\t\t\t\t\t{links.map((link, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tdisplay=\"inline-block\"\r\n\t\t\t\t\t\t\t\thref={link.url}\r\n\t\t\t\t\t\t\t\taria-label={link.label}\r\n\t\t\t\t\t\t\t\tisExternal\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tas={link.icon}\r\n\t\t\t\t\t\t\t\t\tfontSize=\"xl\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"gray.400\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Box>\r\n\t\t</>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Text, SimpleGrid } from \"@chakra-ui/react\";\r\n\r\nconst buttonWidth = \"170px\";\r\n\r\nconst exampleButtons = [\r\n\t{\r\n\t\tname: \"LinkedIn\",\r\n\t\tlink: \"https://www.linkedin.com/jobs/view/2255261986\",\r\n\t},\r\n\t{\r\n\t\tname: \"Indeed\",\r\n\t\tlink:\r\n\t\t\t\"https://ca.indeed.com/viewjob?jk=0573fd7c2855c8e3&tk=1eo98g5too2f6800&from=serp&vjs=3\",\r\n\t},\r\n\t{\r\n\t\tname: \"Monster\",\r\n\t\tlink:\r\n\t\t\t\"https://job-openings.monster.ca/sr-finanial-analyst-langley-bc-ca-thomson-technology/221727383\",\r\n\t},\r\n];\r\n\r\nlet styles = {\r\n\tbuttonGrid: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmargin: \"1em auto\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tmargin: \"1vh 1vw\",\r\n\t},\r\n};\r\n\r\nfunction newTab(url) {\r\n\twindow.open(url, \"_blank\");\r\n}\r\n\r\nfunction ExampleLinks({ setFieldValue }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Text opacity={0.7} fontSize={{ base: \"lg\", lg: \"xl\" }} mt=\"10\" mb=\"0\">\r\n\t\t\t\tExample Links:\r\n\t\t\t</Text>\r\n\t\t\r\n\t\t\t<SimpleGrid style={styles.buttonGrid} columns={{ sm: 3 }}>\r\n\t\t\t\t{exampleButtons.map((button, index) => (\r\n\t\t\t\t\t<div style={styles.buttonContainer}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tcolorScheme=\"blue\"\r\n\t\t\t\t\t\t\tstyle={{ minWidth: buttonWidth }}\r\n\t\t\t\t\t\t\tdisabled={!button.link}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetFieldValue(\"url\", button.link);\r\n\t\t\t\t\t\t\t\tnewTab(button.link);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{button.name}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</SimpleGrid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ExampleLinks;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { CheckIcon, CloseIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction UserInput({\r\n  url,\r\n  num_words,\r\n  errors,\r\n  handleSubmit,\r\n  setFieldValue,\r\n  validateURL,\r\n}) {\r\n  function renderURLValidationIcon() {\r\n    const isValid = validateURL();\r\n    if (url.length === 0) {\r\n      return null;\r\n    } else if (!isValid) {\r\n      return <CloseIcon color=\"red.500\" />;\r\n    } else {\r\n      return <CheckIcon color=\"green.500\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n\t\t<div style={{ paddingTop: \"2vw\" }}>\r\n\t\t\t<FormLabel>URL:</FormLabel>\r\n\t\t\t<InputGroup size=\"lg\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tpr=\"6rem\"\r\n\t\t\t\t\tplaceholder=\"Link to job\"\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tonChange={(e) => setFieldValue(\"url\", e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputRightElement\r\n\t\t\t\t\tstyle={{ paddingLeft: \"7vw\" }}\r\n\t\t\t\t\twidth=\"7rem\"\r\n\t\t\t\t\tchildren={renderURLValidationIcon()}\r\n\t\t\t\t/>\r\n\t\t\t</InputGroup>\r\n\t\t\t<br></br>\r\n\t\t\t<FormLabel># of keywords:</FormLabel>\r\n\t\t\t<Stack mt={4} direction=\"row\" spacing=\"12px\" justify=\"center\">\r\n\t\t\t\t<NumberInput\r\n\t\t\t\t\twidth=\"90%\"\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={50}\r\n          value={num_words}\r\n\t\t\t\t\tonChange={(value) => setFieldValue(\"num_words\", value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NumberInputField />\r\n\t\t\t\t\t<NumberInputStepper>\r\n\t\t\t\t\t\t<NumberIncrementStepper />\r\n\t\t\t\t\t\t<NumberDecrementStepper />\r\n\t\t\t\t\t</NumberInputStepper>\r\n\t\t\t\t</NumberInput>\r\n\t\t\t\t<Button colorScheme=\"green\" onClick={handleSubmit}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Stack>\r\n\t\t\t<Text style={{ color: \"red\" }}>{errors && errors.url}</Text>\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default UserInput;\r\n","import React from \"react\";\r\nimport { Box, Container, ChakraProvider } from \"@chakra-ui/react\";\r\nimport { withFormik } from \"formik\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n//import { useAsync } from \"react-async\";\r\nimport * as Yup from \"yup\";\r\nimport { Header, Footer } from \"./components/HeaderAndFooter\";\r\nimport ExampleLinks from \"./components/ExampleLinks\";\r\nimport UserInput from \"./components/UserInput\";\r\n//import { getResults } from \"./requests\";\r\nimport \"./App.css\";\r\n\r\nconst ERR_MSGS = {\r\n\turlMissing: \"URL is required\",\r\n\tnumWordsMissing: \"# of keywords is required\",\r\n\turlInvalid: \"Invalid URL format\",\r\n};\r\n\r\nconst Schema = Yup.object().shape({\r\n\turl: Yup.string().url(ERR_MSGS.urlInvalid).required(ERR_MSGS.urlMissing),\r\n\tnum_words: Yup.number().required(ERR_MSGS.numWordsMissing),\r\n});\r\n\r\nfunction UnconnectedApp({\r\n\tenqueueSnackBar,\r\n\terrors,\r\n\thandleSubmit,\r\n\tsetFieldValue,\r\n\tvalues,\r\n}) {\r\n\tconst url = values.url;\r\n\tconst num_words = values.num_words;\r\n\t/*\r\n  const { execute, status, value, error } = useAsync(getResults, {\r\n    url: url,\r\n  });*/\r\n\r\n\tfunction validateURL() {\r\n\t\ttry {\r\n\t\t\tSchema.validateSyncAt(\"url\", { url: url });\r\n\t\t\treturn true;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tlet styles = {\r\n\t\tmain: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container as=\"div\" style={styles.main}>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tas=\"section\"\r\n\t\t\t\t\tpt={{ base: \"4rem\", md: \"6rem\" }}\r\n\t\t\t\t\tpb={{ base: \"0\", md: \"5rem\" }}\r\n\t\t\t\t\twidth=\"100vw\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\tflexDirection=\"column\"\r\n\t\t\t\t\t\tid=\"centerBox\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<UserInput\r\n\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t\tnum_words={num_words}\r\n\t\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\r\n\t\t\t\t\t\t\tvalidateURL={validateURL}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ExampleLinks setFieldValue={setFieldValue} />\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport const EnhancedApp = withFormik({\r\n\tenableReinitialize: true,\r\n\thandleSubmit: ({ url, num_words }) => {\r\n\t\tconsole.log({\r\n\t\t\turl,\r\n\t\t\tnum_words,\r\n\t\t});\r\n\t},\r\n\tmapPropsToValues: (props) => ({\r\n\t\turl: \"\",\r\n\t\tnum_words: 10,\r\n\t}),\r\n\tvalidationSchema: () => Schema,\r\n\tvalidateOnBlur: false,\r\n\tvalidateOnChange: false,\r\n})(UnconnectedApp);\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<ChakraProvider>\r\n\t\t\t<SnackbarProvider>\r\n\t\t\t\t<EnhancedApp />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</ChakraProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}